<footer class="container-fluid bg-dark mt-5">
    <div class="row pt-5">
        <div class="col-4 d-flex justify-content-center">
            <div class="container col-8">
                <span class="color-main fw-bold ">ABOUT KRITHY</span>
                <p class="text-center text-lg-start text-white">KRITHY Books started in 2023 by Muhammed Safvan kv [popularly known as KRITHY, 
                  publishing in India]</p>
            </div>
        </div>
        <div class="col-4 d-flex justify-content-center">
            <div class="container col-8 justify-content-center ">
                <span class="color-main fw-bold text-uppercase">links</span>
                <div class="col-lg-3 col">
                    <a href="" class="">Authors</a>
                    <a href="">Wishlist</a>
                    <a href="">Cart</a>
                    <a href="">Shopping</a>
                </div>
            </div>
        </div>
        <div class="col-4">
            <div class="container col-8">
                <span class="color-main fw-bold text-uppercase">follow us</span>
                <p class="text-center text-lg-start">KRITHY Books started in 2023 by Muhammed Safvan kv [popularly known as KRITHY, 
                  publishing in India]</p>
            </div>
        </div>
        <p class="mt-5 text-center text-light fst-italic">&copy; 2023 Krithy books. All rights reserved.</p>

    </div>
  </footer>

<!-- user profile page footer -->
<!-- user profile page footer -->


    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>   <!-- boostrap-5 -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF" crossorigin="anonymous"></script>
    <!-- boostrap-5 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js" integrity="sha512-3gJwYpMe3QewGELv8k/BX9vcqhryRdzRMxVfq6ngyWXwo03GFEzjsUm8Q7RZcHPHksttq7/GFoxjCVUjkjvPdw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="/js/index.js"></script>
    <script src="/js/validate.js"></script>

    <!--  -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"
    integrity="sha512-3gJwYpMe3QewGELv8k/BX9vcqhryRdzRMxVfq6ngyWXwo03GFEzjsUm8Q7RZcHPHksttq7/GFoxjCVUjkjvPdw=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    

    <script>
        // JavaScript code for image uploading and cropping
        var profilePic = document.getElementById('profile-pic');
        var upload = document.getElementById('upload');
        var croppie = null;
    
        profilePic.addEventListener('click', function () {
            upload.click();
        });
    
        upload.addEventListener('change', function (e) {
            var reader = new FileReader();
            reader.onload = function(e) {
                if (croppie !== null) {
                    croppie.destroy();
                }
                croppie = new Croppie(profilePic, {
                    url: e.target.result,
                    viewport: {
                        width: 100,
                        height: 100
                    },
                    boundary: {
                        width: 150,
                        height: 150
                    }
                });
            }
            reader.readAsDataURL(upload.files[0]);
        });
    
        // 
        
      var saveButton = document.getElementById('save');
    
    upload.addEventListener('change', function (e) {
      var reader = new FileReader();
      reader.onload = function(e) {
          if (croppie !== null) {
              croppie.destroy();
          }
          croppie = new Croppie(profilePic, {
              url: e.target.result,
              viewport: {
                  width: 100,
                  height: 100
              },
              boundary: {
                  width: 150,
                  height: 150
              }
          });
          saveButton.style.display = 'block'; // Show the save button
      }
      reader.readAsDataURL(upload.files[0]);
    });
    
    saveButton.addEventListener('click', function () {
      croppie.result('base64').then(function (base64) {
          $.ajax({
              url: '/save_image', // Replace with the URL of your server-side script
              type: 'POST',
              data: {
                  image: base64
              },
              success: function () {
                  alert('Image saved successfully');
              },
              error: function () {
                  alert('Failed to save image');
              }
          });
      });
    });
//    ============================================
// ========================================================
document.querySelectorAll('.edit-btn').forEach((editBtn, i) => {
    editBtn.addEventListener('click', () => {
        // Find the parent 'address' div
        const addressDiv = editBtn.parentElement.parentElement;
        // Find the textarea within this address div
        const textarea = addressDiv.querySelector('textarea');
        // Enable the textarea
        textarea.disabled = false;

        // Find the 'set as default' checkbox within this address div
        const defaultCheck = addressDiv.querySelector('.form-check-input');
        // Enable the 'set as default' checkbox
        defaultCheck.disabled = false;

        // Show 'Save' and 'Cancel' buttons, hide 'Edit'
        editBtn.style.display = 'none';
        addressDiv.querySelector('.save-btn').style.display = 'inline-block';
        addressDiv.querySelector('.cancel-btn').style.display = 'inline-block';
    });
});

document.querySelectorAll('.cancel-btn').forEach((cancelBtn, i) => {
    cancelBtn.addEventListener('click', () => {
        // Find the parent 'address' div
        const addressDiv = cancelBtn.parentElement.parentElement;
        // Find the textarea within this address div
        const textarea = addressDiv.querySelector('textarea');
        // Disable the textarea
        textarea.disabled = true;

        // Find the 'set as default' checkbox within this address div
        const defaultCheck = addressDiv.querySelector('.form-check-input');
        // Disable the 'set as default' checkbox
        defaultCheck.disabled = true;

        // Show 'Edit' button, hide 'Save' and 'Cancel'
        cancelBtn.style.display = 'none';
        cancelBtn.previousElementSibling.style.display = 'none';
        addressDiv.querySelector('.edit-btn').style.display = 'inline';
    });
});

// ===================================================================================
// address add successs message============ sweet alert                             //|
                                                                                    //|
                                                                                    document.addEventListener('DOMContentLoaded', (event) => { //|
    const urlParams = new URLSearchParams(window.location.search);
    const addressAdded = urlParams.get('addressAdded');
    const addressEdited = urlParams.get('addressEdited');

    if (addressAdded) {
        Swal.fire({
            icon: 'success',
            title: 'Address added successfully',
            showConfirmButton: false,
            timer: 1500
        }).then(() => {
            // Remove 'addressAdded' query param
            urlParams.delete('addressAdded');
            // Change the URL without reloading the page
            window.history.replaceState({}, '', `${location.pathname}?${urlParams}`);
        });
    }

    if (addressEdited) {
        Swal.fire({
            icon: 'success',
            title: 'Address edited successfully',
            showConfirmButton: false,
            timer: 1500
        }).then(() => {
            // Remove 'addressEdited' query param
            urlParams.delete('addressEdited');
            // Change the URL without reloading the page
            window.history.replaceState({}, '', `${location.pathname}?${urlParams}`);
        });
    }
});





  // 'Delete' click events
document.addEventListener('click', event => {
    if (event.target.matches('.delete-btn')) {
        const addressID = event.target.dataset.id;

        fetch('/users/profile/manageAddress/addressDelete', {
            method: 'DELETE',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({addressID})
        }).then(() => {
            window.location.reload();
        });
    }
});

// 
document.addEventListener('click', event => {
    if (event.target.matches('.save-btn')) {
        const addressID = event.target.dataset.id;

        // Find the parent 'address' div
        const addressDiv = event.target.parentElement.parentElement;

        // Get the textarea within this address div
        const textarea = addressDiv.querySelector('textarea');

        // Get the updated address fields from the textarea
        const [building, address, pincode, country, contactNumber] = textarea.value.split('\n');

        // Validate the contactNumber
        if (contactNumber.length !== 10 || contactNumber.charAt(0) === '0') {
            alert("Please enter a contact number with exactly 10 digits and it should not start with 0");
            return;  // Don't send the fetch request if validation fails
        }
        // if(pincode!==number){
        //     alert("pincode should be number")
        // }
        // Prepare the updated address data
        const updatedAddress = {
            addressID, // Include the address ID
            building,
            address,
            pincode,
            country,
            contactNumber
        };

        fetch('/users/profile/manageAddress/editAddress', {
            method: 'PUT',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify(updatedAddress) // Send the updated address data
        }).then(() => {
            window.location.reload();
        });
    }
});


</script>

    
<!-- user profile page footer -->
    
    

</body>
</html>

